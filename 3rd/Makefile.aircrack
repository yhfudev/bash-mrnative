# Auto-Build aircrack from source

# Prerequist:
# 1. basic compiler
#  1) RedHat/CentOS:
#     yum -y groupinstall "Development Tools"
#     yum -y install gcc-c++ rpm-build rpmdevtools binutils-devel autoconf automake libtool autogen intltool bison flex gdb make cvs subversion git mercurial patch gawk
#  2) Debian/Ubuntu
#     sudo apt-get install -y build-essential g++ autoconf automake libtool autogen intltool bison flex gdb make cvs subversion subversion-tools git mercurial patch gawk

######################################################################
# define the directory stores all of the source code packages
DN_SRC=$(PWD)/../sources
DN_TOP=$(PWD)
DN_PATCH=$(PWD)/../sources
PREFIX=$(PWD)/target
STRLOGO=yhfudev
USE_GPU=0
DEPENDS_GL=

######################################################################
all: get-sources aircrack hashcat-all pyrit

######################################################################
include Makefile.common

HASHCAT_GPU_DEPENDS=

ifeq ($(USE_GPU),GPU_CUDA)
PYRIT_GPU_DEPENDS=$(CPYRITCUDA)-install
HASHCAT_GPU_DEPENDS=hashcat
else
ifeq ($(USE_GPU),GPU_OPENCL)
PYRIT_GPU_DEPENDS=$(CPYRITOPENCL)-install
HASHCAT_GPU_DEPENDS=hashcat
endif
endif

hashcat-all: hashcat $(HASHCAT_GPU_DEPENDS)

######################################################################
LIBNL3=libnl

FL_DEP_LIBNL3= \
	$(NULL)

LIBNL3_VERSION=3.2.27
LIBNL3_SRC=$(LIBNL3)-$(LIBNL3_VERSION).tar.gz
LIBNL3_URL=https://github.com/thom311/libnl/releases/download/libnl3_2_27/$(LIBNL3_SRC)

$(DN_SRC)/$(LIBNL3_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(LIBNL3_URL)
	touch $@
$(LIBNL3)-$(LIBNL3_VERSION)/configure: $(DN_SRC)/$(LIBNL3_SRC)
	tar -xf $(DN_SRC)/$(LIBNL3_SRC)
	touch $@
$(LIBNL3)-$(LIBNL3_VERSION)/Makefile: $(LIBNL3)-$(LIBNL3_VERSION)/configure $(FL_DEP_LIBNL3)
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --sysconfdir=$(PREFIX_CONF)/etc --sbindir=$(PREFIX_CONF)/bin --disable-static
$(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la: $(LIBNL3)-$(LIBNL3_VERSION)/Makefile
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && $(ENV_COMPILE) make LIBS="-pthread -lm" $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/libnl-3.la: $(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install

$(LIBNL3)-uninstall: $(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(LIBNL3)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/libnl-3.la
	touch $@

FL_SOURCES+=$(DN_SRC)/$(LIBNL3_SRC)
FL_UNINSTALL+=$(LIBNL3)-uninstall

######################################################################
LIBPCAP=libpcap

FL_DEP_LIBPCAP= \
    $(LIBNL3)-install \
    #$(bluez-libs)-install \
	$(NULL)

LIBPCAP_VERSION=1.7.4
LIBPCAP_SRC=$(LIBPCAP)-$(LIBPCAP_VERSION).tar.gz
LIBPCAP_URL=http://www.tcpdump.org/release/$(LIBPCAP_SRC)

$(DN_SRC)/$(LIBPCAP_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(LIBPCAP_URL)
	touch $@
$(LIBPCAP)-$(LIBPCAP_VERSION)/configure: $(DN_SRC)/$(LIBPCAP_SRC)
	tar -xf $(DN_SRC)/$(LIBPCAP_SRC)
	touch $@
$(LIBPCAP)-$(LIBPCAP_VERSION)/Makefile: $(LIBPCAP)-$(LIBPCAP_VERSION)/configure $(FL_DEP_LIBPCAP)
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --enable-ipv6 --with-libnl=$(PREFIX_DEST)/$(PREFIX_CONF)/ --disable-bluetooth #-enable-bluetooth

CFLAGS_LIBPCAP=-I$(PREFIX_DEST)/$(PREFIX_CONF)/include/libnl3
$(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la: $(LIBPCAP)-$(LIBPCAP_VERSION)/Makefile
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && $(ENV_COMPILE) make CFLAGS=$(CFLAGS_LIBPCAP) $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/libpcap.a: $(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la
	install -d -m755 $(PREFIX_DEST)/$(PREFIX_CONF)/bin
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	# backwards compatibility, programs often look for net/bpf.h
	mkdir -p $(PREFIX_DEST)/$(PREFIX_CONF)/include/net
	ln -sf ../pcap-bpf.h $(PREFIX_DEST)/$(PREFIX_CONF)/include/net/bpf.h

$(LIBPCAP)-uninstall: $(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(LIBPCAP)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/libpcap.a
	touch $@

FL_SOURCES+=$(DN_SRC)/$(LIBPCAP_SRC)
FL_UNINSTALL+=$(LIBPCAP)-uninstall

######################################################################
# 'iw' 'net-tools' 'wireless_tools' 'ethtool'
AIRCRACK=aircrack-ng

FL_DEP_AIRCRACK= \
    $(PKGCONFIG)-install \
    $(SQLITE)-install \
    $(OPENSSL)-install \
    $(LIBPCAP)-install \
    $(LIBNL3)-install \
    $(NULL)

AIRCRACK_VERSION=1.2-rc3
AIRCRACK_SRC=$(AIRCRACK)-$(AIRCRACK_VERSION).tar.gz
AIRCRACK_URL=http://download.aircrack-ng.org/$(AIRCRACK_SRC)

$(DN_SRC)/$(AIRCRACK_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(AIRCRACK_URL)
	touch $@

$(AIRCRACK)-$(AIRCRACK_VERSION)/Makefile: $(DN_SRC)/$(AIRCRACK_SRC)
	tar -xf $(DN_SRC)/$(AIRCRACK_SRC)
	sed -e 's|^inline |static inline |' -i $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng.c
	sed -e 's|#include "pcap.h"|#include "../pcap.h"|' -i $(AIRCRACK)-$(AIRCRACK_VERSION)/src/osdep/file.c
	touch $@

$(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng: $(AIRCRACK)-$(AIRCRACK_VERSION)/Makefile $(FL_DEP_AIRCRACK)
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && $(ENV_COMPILE) make LIBS="-L./osdep -losdep `$(ENV_COMPILE) pkg-config --libs libnl-3.0 libnl-genl-3.0`  -pthread -lm" sqlite=true experimental=true $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/aircrack-ng: $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && $(ENV_COMPILE) make -j1 DESTDIR=$(PREFIX_DEST) sqlite=true experimental=true \
        bindir=$(PREFIX_DEST)/$(PREFIX_CONF)/bin \
        sbindir=$(PREFIX_DEST)/$(PREFIX_CONF)/bin \
        mandir=$(PREFIX_DEST)/$(PREFIX_CONF)/share/man/man1/ \
        smandir=$(PREFIX_DEST)/$(PREFIX_CONF)/share/man/man8/ \
        install

$(AIRCRACK)-uninstall: $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(AIRCRACK)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/aircrack-ng
	touch $@

FL_SOURCES+=$(DN_SRC)/$(AIRCRACK_SRC)
FL_UNINSTALL+=$(AIRCRACK)-uninstall

########################################
# A free library for arbitrary precision arithmetic
GMP=gmp

GMP_VERSION=6.1.0
GMP_SRC=$(GMP)-$(GMP_VERSION).tar.xz
GMP_URL=https://gmplib.org/download/gmp/$(GMP_SRC)

$(DN_SRC)/$(GMP_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(GMP_URL)
	touch $@

$(GMP)-$(GMP_VERSION)/configure: $(DN_SRC)/$(GMP_SRC)
	tar -xf $(DN_SRC)/$(GMP_SRC)
	#cd $(GMP)-$(GMP_VERSION)/ && $(ENV_COMPILE) autoreconf -if
	touch $@

$(GMP)-$(GMP_VERSION)/Makefile: $(GMP)-$(GMP_VERSION)/configure $(FL_DEP_GMP)
	cd $(GMP)-$(GMP_VERSION)/ \
		&& $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --enable-cxx
	touch $@
$(GMP)-$(GMP_VERSION)/$(GMP).la: $(GMP)-$(GMP_VERSION)/Makefile
	cd $(GMP)-$(GMP_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(GMP).la: $(GMP)-$(GMP_VERSION)/$(GMP).la
	cd $(GMP)-$(GMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	touch $@

$(GMP)-uninstall: $(GMP)-$(GMP_VERSION)/$(GMP).la
	cd $(GMP)-$(GMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(GMP)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(GMP).la
	touch $@

FL_SOURCES+=$(DN_SRC)/$(GMP_SRC)
FL_UNINSTALL+=$(GMP)-uninstall

########################################
# hashcat
HASHCAT=hashcat

FL_DEP_HASHCAT= \
	$(GMP)-install \
	$(NULL)

HASHCAT_VERSION=2.00
HASHCAT_SRC=$(HASHCAT)-$(HASHCAT_VERSION).tar.gz
HASHCAT_URL=https://github.com/hashcat/hashcat/archive/$(HASHCAT_VERSION).tar.gz

$(DN_SRC)/$(HASHCAT_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(HASHCAT_URL)
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/README.md: $(DN_SRC)/$(HASHCAT_SRC)
	tar -xf $(DN_SRC)/$(HASHCAT_SRC)
	rm -f $(HASHCAT)-install
	#mv $(HASHCAT)*$(HASHCAT_VERSION) $(HASHCAT)-$(HASHCAT_VERSION)
	#cd $(HASHCAT)-$(HASHCAT_VERSION)/
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/Makefile: $(HASHCAT)-$(HASHCAT_VERSION)/README.md $(FL_DEP_HASHCAT)
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin: $(HASHCAT)-$(HASHCAT_VERSION)/Makefile
	cd $(HASHCAT)-$(HASHCAT_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG) LDFLAGS="-L$(PREFIX_DEST)/$(PREFIX_CONF)/lib/" CFLAGS="-std=gnu99 $(CFLAGS) -Iinclude" posix$(ARCHBITS)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat-cli$(ARCHBITS).bin: $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/hatcat/
	install -Dm755 $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin $(PREFIX_DEST)/$(PREFIX_CONF)/bin/
	install -Dm644 $(HASHCAT)-$(HASHCAT_VERSION)/docs/license.txt $(PREFIX_DEST)/$(PREFIX_CONF)/share/licenses/hashcat/license.txt
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/rules  $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/salts  $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/tables $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/examples $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/hatcat/
	touch $@

$(HASHCAT)-uninstall: $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin
	cd $(HASHCAT)-$(HASHCAT_VERSION)/build && make uninstall
$(HASHCAT)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat-cli$(ARCHBITS).bin
	touch $@

FL_SOURCES+=$(DN_SRC)/$(HASHCAT_SRC)
FL_UNINSTALL+=$(HASHCAT)-uninstall

########################################
# https://aur.archlinux.org/packages/amdapp-sdk/
# https://aur.archlinux.org/packages/nvidia-gdk/
# Nvidia GPU Deployment Kit
# https://developer.nvidia.com/gpu-deployment-kit
NVIDIAGDK=nvidia-gdk

# http://developer.download.nvidia.com/compute/cuda/6_0/rel/gdk/gdk_331_62_release.tgz
# http://developer.download.nvidia.com/compute/cuda/6_0/rel/gdk/gdk_331_62_release.tgz

# http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_352_39_gdk_linux.run
#NVIDIAGDK_VERSION=352.55
#NVIDIAGDK_SRC=gdk_linux_amd64_352_55_release.run
#NVIDIAGDK_URL=http://developer.download.nvidia.com/compute/cuda/7.5/Prod/gdk/$(NVIDIAGDK_SRC)

# http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_352_39_gdk_linux.run
NVIDIAGDK_VERSION=352.39
NVIDIAGDK_SRC=cuda_352_39_gdk_linux.run
NVIDIAGDK_URL=http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/$(NVIDIAGDK_SRC)

$(DN_SRC)/$(NVIDIAGDK_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(NVIDIAGDK_URL)
	touch $@

$(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl: $(DN_SRC)/$(NVIDIAGDK_SRC)
	sh $(DN_SRC)/$(NVIDIAGDK_SRC) --silent --installdir=$(PREFIX)
	touch $@

$(NVIDIAGDK)-uninstall: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl
	$(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl

$(NVIDIAGDK)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl
	touch $@

FL_SOURCES+=$(DN_SRC)/$(NVIDIAGDK_SRC)
FL_UNINSTALL+=$(NVIDIAGDK)-uninstall

########################################
# AMD Display Library (ADL) SDK
# http://developer.amd.com/tools-and-sdks/graphics-development/display-library-adl-sdk/
AMDADLSDK=amdadlsdk

FL_DEP_AMDADLSDK= \
	$(catalyst-utils)-install \
	$(NULL)

AMDADLSDK_VERSION=9
AMDADLSDK_SRC=ADL_SDK$(AMDADLSDK_VERSION).zip
AMDADLSDK_URL=http://developer.amd.com/tools-and-sdks/graphics-development/display-library-adl-sdk/

$(DN_SRC)/$(AMDADLSDK_SRC): $(DN_SRC)/created
	#$(WGET) -O $@ -c $(AMDADLSDK_URL)
	echo "Please download $(AMDADLSDK_SRC) by manual from $(AMDADLSDK_URL)"
	echo "  and place the file to $(DN_SRC)/"
	exit 1
	#touch $@

$(AMDADLSDK)-$(AMDADLSDK_VERSION)/include/adl_sdk.h: $(DN_SRC)/$(AMDADLSDK_SRC)
	mkdir -p $(AMDADLSDK)-$(AMDADLSDK_VERSION)
	cd $(AMDADLSDK)-$(AMDADLSDK_VERSION) && unzip $(DN_SRC)/$(AMDADLSDK_SRC)
	rm -f $(AMDADLSDK)-install
	#mv $(AMDADLSDK)*$(AMDADLSDK_VERSION) $(AMDADLSDK)-$(AMDADLSDK_VERSION)
	#cd $(AMDADLSDK)-$(AMDADLSDK_VERSION)/
	sed -e '/include/a \#include <wchar.h>'   -i $(AMDADLSDK)-$(AMDADLSDK_VERSION)/include/adl_structures.h
	sed -e '/include/a \#include <stdbool.h>' -i $(AMDADLSDK)-$(AMDADLSDK_VERSION)/include/adl_sdk.h
	touch $@

$(AMDADLSDK)-$(AMDADLSDK_VERSION)/adlutil/adlutil: $(AMDADLSDK)-$(AMDADLSDK_VERSION)/include/adl_sdk.h
	cd $(AMDADLSDK)-$(AMDADLSDK_VERSION)/ && cd adlutil && $(ENV_COMPILE) gcc main.c -o adlutil -DLINUX -ldl -I ../include
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/adlutil: $(AMDADLSDK)-$(AMDADLSDK_VERSION)/adlutil/adlutil
	install -m755 -d $(PREFIX_DEST)/$(PREFIX_CONF)/bin
	install -m755 $(AMDADLSDK)-$(AMDADLSDK_VERSION)/adlutil/adlutil $(PREFIX_DEST)/$(PREFIX_CONF)/bin
	install -m755 -d $(PREFIX_DEST)/$(PREFIX_CONF)/include/ADL
	install -m644 $(AMDADLSDK)-$(AMDADLSDK_VERSION)/include/* $(PREFIX_DEST)/$(PREFIX_CONF)/include/ADL
	install -m755 -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/ADL
	mv -v $(AMDADLSDK)-$(AMDADLSDK_VERSION)/Public-Documents $(AMDADLSDK)-$(AMDADLSDK_VERSION)/Sample $(AMDADLSDK)-$(AMDADLSDK_VERSION)/Sample-Managed $(AMDADLSDK)-$(AMDADLSDK_VERSION)/ADL_SDK.html $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/ADL
	touch $@

$(AMDADLSDK)-uninstall: $(AMDADLSDK)-$(AMDADLSDK_VERSION)/AMDADLSDK$(ARCHBITS).bin
	cd $(AMDADLSDK)-$(AMDADLSDK_VERSION)/build && make uninstall
$(AMDADLSDK)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/adlutil
	touch $@

FL_SOURCES+=$(DN_SRC)/$(AMDADLSDK_SRC)
FL_UNINSTALL+=$(AMDADLSDK)-uninstall

########################################
# hashcat
# https://wiki.archlinux.org/index.php/GPGPU
# https://wiki.archlinux.org/index.php?title=GPGPU&redirect=no
# https://hashcat.net
# GPGPU-based password recovery utility
OCLHASHCAT=hashcat

FL_DEP_OCLHASHCAT= \
	$(NVIDIAGDK)-install \
	$(AMDADLSDK)-install \
	$(LIBCL)-install \
	#$(OPENCLHEADER)-install \
	$(NULL)

USE_GIT_OCLHASHCAT=1

ifeq ($(USE_GIT_OCLHASHCAT),1) # use git instead

OCLHASHCAT_VERSION=git
OCLHASHCAT_SRC=$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/.git
OCLHASHCAT_URL=https://github.com/hashcat/hashcat.git

$(DN_SRC)/$(OCLHASHCAT_SRC): $(DN_SRC)/created
	if [ ! -d "$(DN_SRC)/$(OCLHASHCAT_SRC)" ]; then \
        git clone $(OCLHASHCAT_URL) $(DN_SRC)/$(OCLHASHCAT)-$(OCLHASHCAT_VERSION); \
    fi
	cd $(DN_SRC)/$(OCLHASHCAT)-$(OCLHASHCAT_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/README.md: $(DN_SRC)/$(OCLHASHCAT_SRC)
	if [ ! -d "$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)" ]; then \
        cp -r $(DN_SRC)/$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ $(OCLHASHCAT)-$(OCLHASHCAT_VERSION); \
    fi
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

else

OCLHASHCAT_VERSION=3.30
OCLHASHCAT_SRC=$(OCLHASHCAT)-$(OCLHASHCAT_VERSION).tar.gz
OCLHASHCAT_URL=https://github.com/hashcat/hashcat/archive/v$(OCLHASHCAT_VERSION).tar.gz

$(DN_SRC)/$(OCLHASHCAT_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(OCLHASHCAT_URL)
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/README.md: $(DN_SRC)/$(OCLHASHCAT_SRC)
	tar -xf $(DN_SRC)/$(OCLHASHCAT_SRC)
	rm -f $(OCLHASHCAT)-install
	mv oclHashcat*$(OCLHASHCAT_VERSION) $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)
	#cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/
	touch $@

endif

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/mypatched: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/README.md $(FL_DEP_OCLHASHCAT)
	if [ -d $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/.svn ]; then cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && svn revert -R . ; fi
	if [ -d $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/.hg ];  then cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && hg update -C . ; fi
	if [ -d $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/.git ]; then cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && git status | grep modified | awk '{print $$2}' | xargs git checkout ; fi
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && patch -Np1 -i $(DN_PATCH)/pbs-oclhashcat-all.patch
	sed -e 's|session_dir = arg_session_dir;|session_dir = arg_session_dir;shared_dir="$(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/";|' -i $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/src/hashcat.c
	touch $@
$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/Makefile: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/mypatched
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/hashcat$(ARCHBITS).bin: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/Makefile
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && $(ENV_COMPILE) make CFLAGS="-std=gnu99 $(CFLAGS) -I$(PREFIX_DEST)/$(PREFIX_CONF)/include/ADL/ -I$(PREFIX_DEST)/$(PREFIX_CONF)/include/nvidia/gdk/ -Iinclude" $(MAKE_ARG) hashcat$(ARCHBITS).bin
	#cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && $(ENV_COMPILE) GCC=gcc make CFLAGS="-I$(PREFIX_DEST)/$(PREFIX_CONF)/include/ADL/ -I$(PREFIX_DEST)/$(PREFIX_CONF)/include/nvidia/gdk/ -I../../include -I../../tools/rules_test/" $(MAKE_ARG) -C tools/rules_optimize TARGET=rules_optimize rules_optimize.bin
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/hashcat$(ARCHBITS).bin
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/hashcat/
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && cp -ar charsets OpenCL include masks rules hashcat.hcstat docs extra $(PREFIX_DEST)/$(PREFIX_CONF)/share/hashcat/
	install -Dm755 $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/hashcat$(ARCHBITS).bin    $@
	touch $@

$(OCLHASHCAT)-uninstall: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/hashcat$(ARCHBITS).bin
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/build && make uninstall
$(OCLHASHCAT)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat
	touch $@

FL_SOURCES+=$(DN_SRC)/$(OCLHASHCAT_SRC)
FL_UNINSTALL+=$(OCLHASHCAT)-uninstall

########################################
# A tool for network monitoring and data acquisition
TCPDUMP=tcpdump

FL_DEP_TCPDUMP= \
	$(LIBPCAP)-install \
	$(OPENSSL)-install \
	$(NULL)

TCPDUMP_VERSION=4.7.4
TCPDUMP_SRC=$(TCPDUMP)-$(TCPDUMP_VERSION).tar.gz
TCPDUMP_URL=http://www.tcpdump.org/release/$(TCPDUMP_SRC)

$(DN_SRC)/$(TCPDUMP_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(TCPDUMP_URL)
	touch $@
$(TCPDUMP)-$(TCPDUMP_VERSION)/configure: $(DN_SRC)/$(TCPDUMP_SRC)
	tar -xf $(DN_SRC)/$(TCPDUMP_SRC)
	#patch -Np1 -i $(DN_SRC)/tcpdump_duplicate_executable.patch
	touch $@
$(TCPDUMP)-$(TCPDUMP_VERSION)/Makefile: $(TCPDUMP)-$(TCPDUMP_VERSION)/configure $(FL_DEP_TCPDUMP)
	cd $(TCPDUMP)-$(TCPDUMP_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --sbindir=$(PREFIX_CONF)/bin --enable-ipv6
$(TCPDUMP)-$(TCPDUMP_VERSION)/tcpdump: $(TCPDUMP)-$(TCPDUMP_VERSION)/Makefile
	cd $(TCPDUMP)-$(TCPDUMP_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/tcpdump: $(TCPDUMP)-$(TCPDUMP_VERSION)/tcpdump
	cd $(TCPDUMP)-$(TCPDUMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install

$(TCPDUMP)-uninstall: $(TCPDUMP)-$(TCPDUMP_VERSION)/tcpdump
	cd $(TCPDUMP)-$(TCPDUMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(TCPDUMP)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/tcpdump
	touch $@

FL_SOURCES+=$(DN_SRC)/$(TCPDUMP_SRC)
FL_UNINSTALL+=$(TCPDUMP)-uninstall

########################################
# A powerful interactive packet manipulation program written in Python
SCAPY=scapy

FL_DEP_SCAPY= \
	$(TCPDUMP)-install \
	#$(python2)-install \
	$(python2-crypto)-install \
	$(python2-pyx)-install \
	$(python2-gnuplot)-install \
	$(graphviz)-install \
	$(sox)-install \
	$(NULL)

SCAPY_VERSION=2.3.1
SCAPY_SRC=$(SCAPY)-$(SCAPY_VERSION).zip
SCAPY_URL=https://bitbucket.org/secdev/scapy/downloads/$(SCAPY_SRC)

$(DN_SRC)/$(SCAPY_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(SCAPY_URL)
	touch $@
$(SCAPY)-$(SCAPY_VERSION)/setup.py: $(DN_SRC)/$(SCAPY_SRC)
	unzip $(DN_SRC)/$(SCAPY_SRC)
	cd $(SCAPY)-$(SCAPY_VERSION)/ \
        && sed -e 's/env python$/env python2/g' -i \
            doc/scapy/*.rst \
            scapy/contrib/*.py \
            run_scapy \
            scapy/pipetool.py \
            scapy/tools/check_asdis.py \
            scapy/layers/inet6.py setup.py
	cd $(SCAPY)-$(SCAPY_VERSION)/ \
        && sed -e 's/env python $/env python2/'   -i scapy/contrib/bgp.py
	cd $(SCAPY)-$(SCAPY_VERSION)/ \
        && sed -e 's/exec python$/exec python2/g' -i run_scapy setup.py
	cd $(SCAPY)-$(SCAPY_VERSION)/ \
        && sed -e 's/exec python /exec python2 /' -i test/run_tests
	touch $@
$(SCAPY)-$(SCAPY_VERSION)/build/scripts-2.7/scapy: $(SCAPY)-$(SCAPY_VERSION)/setup.py $(FL_DEP_SCAPY)
	cd $(SCAPY)-$(SCAPY_VERSION)/ && $(ENV_COMPILE) python2 setup.py build
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/scapy: $(SCAPY)-$(SCAPY_VERSION)/build/scripts-2.7/scapy
	cd $(SCAPY)-$(SCAPY_VERSION)/ && $(ENV_COMPILE) python2 setup.py install -O1 --skip-build --prefix=$(PREFIX_DEST)/$(PREFIX_CONF)
	mkdir -p $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/$(SCAPY)
	install -Dm 644 doc/scapy/*.rst $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/$(SCAPY)

$(SCAPY)-uninstall: $(SCAPY)-$(SCAPY_VERSION)/build/scripts-2.7/scapy

$(SCAPY)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/scapy
	touch $@

FL_SOURCES+=$(DN_SRC)/$(SCAPY_SRC)
FL_UNINSTALL+=$(SCAPY)-uninstall

########################################
# python2-sqlalchemy
# Python 2 SQL toolkit and Object Relational Mapper
PYTHON2SQLALCHEMY=SQLAlchemy

FL_DEP_PYTHON2SQLALCHEMY= \
	#$(python2)-install \
	$(python2-psycopg2)-install \
	$(NULL)

PYTHON2SQLALCHEMY_VERSION=1.0.11
PYTHON2SQLALCHEMY_SRC=$(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION).tar.gz
PYTHON2SQLALCHEMY_URL=https://pypi.python.org/packages/source/S/SQLAlchemy/$(PYTHON2SQLALCHEMY_SRC)

$(DN_SRC)/$(PYTHON2SQLALCHEMY_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(PYTHON2SQLALCHEMY_URL)
	touch $@
$(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/setup.py: $(DN_SRC)/$(PYTHON2SQLALCHEMY_SRC)
	tar -xf $(DN_SRC)/$(PYTHON2SQLALCHEMY_SRC)
	touch $@
$(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/build/lib.linux-$(shell uname -m)-2.7/sqlalchemy/cutils.so: $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/setup.py $(FL_DEP_PYTHON2SQLALCHEMY)
	cd $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/ && $(ENV_COMPILE) python2 setup.py build
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/sqlalchemy/cutils.so: $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/build/lib.linux-$(shell uname -m)-2.7/sqlalchemy/cutils.so
	cd $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/ && $(ENV_COMPILE) python2 setup.py install --root=$(PREFIX_DEST)/$(PREFIX_CONF)
	cd $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/ && install -D -m644 LICENSE $(PREFIX_DEST)/$(PREFIX_CONF)/share/licenses/$(PYTHON2SQLALCHEMY)/LICENSE

$(PYTHON2SQLALCHEMY)-uninstall: $(PYTHON2SQLALCHEMY)-$(PYTHON2SQLALCHEMY_VERSION)/build/lib.linux-$(shell uname -m)-2.7/sqlalchemy/cutils.so

$(PYTHON2SQLALCHEMY)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/sqlalchemy/cutils.so
	touch $@

FL_SOURCES+=$(DN_SRC)/$(PYTHON2SQLALCHEMY_SRC)
FL_UNINSTALL+=$(PYTHON2SQLALCHEMY)-uninstall

########################################
# Pyrit support for Nvidia-CUDA
CPYRITCUDA=cpyrit-cuda

FL_DEP_CPYRITCUDA= \
	$(ZLIB)-install \
	$(OPENSSL)-install \
	$(CUDASDK)-install \
	#$(pyrit)-install \
	$(nvidia)-install \
	$(python2)-install \
	$(NULL)

CPYRITCUDA_VERSION=0.4.0
CPYRITCUDA_SRC=$(CPYRITCUDA)-$(CPYRITCUDA_VERSION).tar.gz
CPYRITCUDA_URL=http://pyrit.googlecode.com/files/$(CPYRITCUDA_SRC)

$(DN_SRC)/$(CPYRITCUDA_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(CPYRITCUDA_URL)
	touch $@
$(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/setup.py: $(DN_SRC)/$(CPYRITCUDA_SRC)
	tar -xf $(DN_SRC)/$(CPYRITCUDA_SRC)
	touch $@
$(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_cuda.so: $(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/setup.py $(FL_DEP_CPYRITCUDA)
	cd $(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/ && $(ENV_COMPILE) python2 setup.py build
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/cpyrit/_cpyrit_cuda.so: $(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_cuda.so
	cd $(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/ && $(ENV_COMPILE) python2 setup.py install --root=$(PREFIX_DEST)/$(PREFIX_CONF)

$(CPYRITCUDA)-uninstall: $(CPYRITCUDA)-$(CPYRITCUDA_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_cuda.so

$(CPYRITCUDA)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/cpyrit/_cpyrit_cuda.so
	touch $@

FL_SOURCES+=$(DN_SRC)/$(CPYRITCUDA_SRC)
FL_UNINSTALL+=$(CPYRITCUDA)-uninstall

########################################
# OpenCL backend for accelerated attack against WPA-PSK authentication
CPYRITOPENCL=cpyrit-opencl

FL_DEP_CPYRITOPENCL= \
	$(ZLIB)-install \
	$(OPENSSL)-install \
	$(LIBCL)-install \
	#$(OPENCLHEADER)-install \
	#$(python2)-install \
	$(opencl-catalyst)-install \
	$(pyrit)-install \
	$(NULL)

CPYRITOPENCL_VERSION=0.4.0
CPYRITOPENCL_SRC=$(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION).tar.gz
CPYRITOPENCL_URL=http://pyrit.googlecode.com/files/$(CPYRITOPENCL_SRC)

$(DN_SRC)/$(CPYRITOPENCL_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(CPYRITOPENCL_URL)
	touch $@
$(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/setup.py: $(DN_SRC)/$(CPYRITOPENCL_SRC)
	tar -xf $(DN_SRC)/$(CPYRITOPENCL_SRC)
	touch $@

$(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_opencl.so: $(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/setup.py $(FL_DEP_CPYRITOPENCL)
	cd $(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/ && $(ENV_COMPILE) python2 setup.py build
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/cpyrit/_cpyrit_opencl.so: $(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_opencl.so
	cd $(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/ && $(ENV_COMPILE) python2 setup.py install --root=$(PREFIX_DEST)/$(PREFIX_CONF)

$(CPYRITOPENCL)-uninstall: $(CPYRITOPENCL)-$(CPYRITOPENCL_VERSION)/build/lib.linux-$(shell uname -m)-2.7/cpyrit/_cpyrit_opencl.so

$(CPYRITOPENCL)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/python2.7/site-packages/cpyrit/_cpyrit_opencl.so
	touch $@

FL_SOURCES+=$(DN_SRC)/$(CPYRITOPENCL_SRC)
FL_UNINSTALL+=$(CPYRITOPENCL)-uninstall

########################################
PYRIT=pyrit

FL_DEP_PYRIT= \
	$(ZLIB)-install \
	$(LIBPCAP)-install \
	$(OPENSSL)-install \
	$(PYTHON2SQLALCHEMY)-install \
	$(PYRIT_GPU_DEPENDS) \
	#$(python2)-install \
	$(SCAPY)-install \
	$(NULL)

PYRIT_VERSION=0.4.0
PYRIT_SRC=$(PYRIT)-$(PYRIT_VERSION).tar.gz
PYRIT_URL=http://pyrit.googlecode.com/files/$(PYRIT_SRC)

$(DN_SRC)/$(PYRIT_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(PYRIT_URL)
	touch $@
$(PYRIT)-$(PYRIT_VERSION)/setup.py: $(DN_SRC)/$(PYRIT_SRC)
	tar -xf $(DN_SRC)/$(PYRIT_SRC)
	touch $@
$(PYRIT)-$(PYRIT_VERSION)/build/scripts-2.7/pyrit: $(PYRIT)-$(PYRIT_VERSION)/setup.py $(FL_DEP_PYRIT)
	cd $(PYRIT)-$(PYRIT_VERSION)/ && $(ENV_COMPILE) python2 setup.py build
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/pyrit: $(PYRIT)-$(PYRIT_VERSION)/build/scripts-2.7/pyrit
	cd $(PYRIT)-$(PYRIT_VERSION)/ && $(ENV_COMPILE) python2 setup.py install -O1 --root=$(PREFIX_DEST)/$(PREFIX_CONF)

$(PYRIT)-uninstall: $(PYRIT)-$(PYRIT_VERSION)/build/scripts-2.7/pyrit

$(PYRIT)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/pyrit
	touch $@

FL_SOURCES+=$(DN_SRC)/$(PYRIT_SRC)
FL_UNINSTALL+=$(PYRIT)-uninstall

########################################

get-sources: $(DN_SRC)/created $(FL_SOURCES) $(FL_SOURCES_OTHERS)

aircrack: $(AIRCRACK)-install

#hashcat: $(HASHCAT)-install

hashcat: $(OCLHASHCAT)-install

pyrit: $(PYRIT)-install

uninstall: $(FL_UNINSTALL)

clean:
	@rm -rf target $(FL_DEP_OTCL) $(FL_DEP_NS2)

distclean: clean
	@mkdir -p target/
	@touch i_should_be_removed
	@(echo "nullname" && ls) | grep -v run.sh | grep -v target | grep -v Makefile | grep -v distclean | grep -v sources | grep -v .patch | xargs sh -c 'mv "$$@" target'
	@rm -rf target
