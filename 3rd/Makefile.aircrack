# Auto-Build aircrack from source

# Prerequist:
# 1. basic compiler
#  1) RedHat/CentOS:
#     yum -y groupinstall "Development Tools"
#     yum -y install gcc-c++ rpm-build rpmdevtools binutils-devel autoconf automake libtool autogen intltool bison flex gdb make cvs subversion git mercurial patch gawk
#  2) Debian/Ubuntu
#     sudo apt-get install -y build-essential g++ autoconf automake libtool autogen intltool bison flex gdb make cvs subversion subversion-tools git mercurial patch gawk

######################################################################
# define the directory stores all of the source code packages
DN_SRC=$(PWD)/../sources
DN_TOP=$(PWD)
DN_PATCH=$(PWD)/../sources
PREFIX=$(PWD)/target
STRLOGO=yhfudev
USE_GPU=0
DEPENDS_GL=

######################################################################
all: get-sources aircrack hashcat pyrit

######################################################################
include Makefile.common

######################################################################
LIBNL3=libnl

FL_DEP_LIBNL3= \
	$(NULL)

LIBNL3_VERSION=3.2.27
LIBNL3_SRC=$(LIBNL3)-$(LIBNL3_VERSION).tar.gz
LIBNL3_URL=https://github.com/thom311/libnl/releases/download/libnl3_2_27/$(LIBNL3_SRC)

$(DN_SRC)/$(LIBNL3_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(LIBNL3_URL)
	touch $@
$(LIBNL3)-$(LIBNL3_VERSION)/configure: $(DN_SRC)/$(LIBNL3_SRC)
	tar -xf $(DN_SRC)/$(LIBNL3_SRC)
	touch $@
$(LIBNL3)-$(LIBNL3_VERSION)/Makefile: $(LIBNL3)-$(LIBNL3_VERSION)/configure $(FL_DEP_LIBNL3)
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --sysconfdir=$(PREFIX_CONF)/etc --sbindir=$(PREFIX_CONF)/bin --disable-static
$(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la: $(LIBNL3)-$(LIBNL3_VERSION)/Makefile
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && $(ENV_COMPILE) make LIBS="-pthread -lm" $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/libnl-3.la: $(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install

$(LIBNL3)-uninstall: $(LIBNL3)-$(LIBNL3_VERSION)/lib/libnl-3.la
	cd $(LIBNL3)-$(LIBNL3_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(LIBNL3)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/libnl-3.la
	touch $@

FL_SOURCES+=$(DN_SRC)/$(LIBNL3_SRC)
FL_UNINSTALL+=$(LIBNL3)-uninstall

######################################################################
LIBPCAP=libpcap

FL_DEP_LIBPCAP= \
    $(LIBNL3)-install \
    #$(bluez-libs)-install \
	$(NULL)

LIBPCAP_VERSION=1.7.4
LIBPCAP_SRC=$(LIBPCAP)-$(LIBPCAP_VERSION).tar.gz
LIBPCAP_URL=http://www.tcpdump.org/release/$(LIBPCAP_SRC)

$(DN_SRC)/$(LIBPCAP_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(LIBPCAP_URL)
	touch $@
$(LIBPCAP)-$(LIBPCAP_VERSION)/configure: $(DN_SRC)/$(LIBPCAP_SRC)
	tar -xf $(DN_SRC)/$(LIBPCAP_SRC)
	touch $@
$(LIBPCAP)-$(LIBPCAP_VERSION)/Makefile: $(LIBPCAP)-$(LIBPCAP_VERSION)/configure $(FL_DEP_LIBPCAP)
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --enable-ipv6 --with-libnl=$(PREFIX_DEST)/$(PREFIX_CONF)/ --disable-bluetooth #-enable-bluetooth

CFLAGS_LIBPCAP=-I$(PREFIX_DEST)/$(PREFIX_CONF)/include/libnl3
$(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la: $(LIBPCAP)-$(LIBPCAP_VERSION)/Makefile
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && $(ENV_COMPILE) make CFLAGS=$(CFLAGS_LIBPCAP) $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/libpcap.a: $(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la
	install -d -m755 $(PREFIX_DEST)/$(PREFIX_CONF)/bin
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	# backwards compatibility, programs often look for net/bpf.h
	mkdir -p $(PREFIX_DEST)/$(PREFIX_CONF)/include/net
	ln -sf ../pcap-bpf.h $(PREFIX_DEST)/$(PREFIX_CONF)/include/net/bpf.h

$(LIBPCAP)-uninstall: $(LIBPCAP)-$(LIBPCAP_VERSION)/libpcap.la
	cd $(LIBPCAP)-$(LIBPCAP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(LIBPCAP)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/libpcap.a
	touch $@

FL_SOURCES+=$(DN_SRC)/$(LIBPCAP_SRC)
FL_UNINSTALL+=$(LIBPCAP)-uninstall

######################################################################
# 'iw' 'net-tools' 'wireless_tools' 'ethtool'
AIRCRACK=aircrack-ng

FL_DEP_AIRCRACK= \
    $(PKGCONFIG)-install \
    $(SQLITE)-install \
    $(OPENSSL)-install \
    $(LIBPCAP)-install \
    $(LIBNL3)-install \
    $(NULL)

AIRCRACK_VERSION=1.2-rc3
AIRCRACK_SRC=$(AIRCRACK)-$(AIRCRACK_VERSION).tar.gz
AIRCRACK_URL=http://download.aircrack-ng.org/$(AIRCRACK_SRC)

$(DN_SRC)/$(AIRCRACK_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(AIRCRACK_URL)
	touch $@

$(AIRCRACK)-$(AIRCRACK_VERSION)/Makefile: $(DN_SRC)/$(AIRCRACK_SRC)
	tar -xf $(DN_SRC)/$(AIRCRACK_SRC)
	sed -e 's|^inline |static inline |' -i $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng.c
	sed -e 's|#include "pcap.h"|#include "../pcap.h"|' -i $(AIRCRACK)-$(AIRCRACK_VERSION)/src/osdep/file.c
	touch $@

$(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng: $(AIRCRACK)-$(AIRCRACK_VERSION)/Makefile $(FL_DEP_AIRCRACK)
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && $(ENV_COMPILE) make LIBS="-L./osdep -losdep `$(ENV_COMPILE) pkg-config --libs libnl-3.0 libnl-genl-3.0`  -pthread -lm" sqlite=true experimental=true $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/aircrack-ng: $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && $(ENV_COMPILE) make -j1 DESTDIR=$(PREFIX_DEST) sqlite=true experimental=true \
        bindir=$(PREFIX_DEST)/$(PREFIX_CONF)/bin \
        sbindir=$(PREFIX_DEST)/$(PREFIX_CONF)/bin \
        mandir=$(PREFIX_DEST)/$(PREFIX_CONF)/share/man/man1/ \
        smandir=$(PREFIX_DEST)/$(PREFIX_CONF)/share/man/man8/ \
        install

$(AIRCRACK)-uninstall: $(AIRCRACK)-$(AIRCRACK_VERSION)/src/aircrack-ng
	cd $(AIRCRACK)-$(AIRCRACK_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(AIRCRACK)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/aircrack-ng
	touch $@

FL_SOURCES+=$(DN_SRC)/$(AIRCRACK_SRC)
FL_UNINSTALL+=$(AIRCRACK)-uninstall

########################################
# A free library for arbitrary precision arithmetic
GMP=gmp

GMP_VERSION=6.1.0
GMP_SRC=$(GMP)-$(GMP_VERSION).tar.xz
GMP_URL=https://gmplib.org/download/gmp/$(GMP_SRC)

$(DN_SRC)/$(GMP_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(GMP_URL)
	touch $@

$(GMP)-$(GMP_VERSION)/configure: $(DN_SRC)/$(GMP_SRC)
	tar -xf $(DN_SRC)/$(GMP_SRC)
	#cd $(GMP)-$(GMP_VERSION)/ && $(ENV_COMPILE) autoreconf -if
	touch $@

$(GMP)-$(GMP_VERSION)/Makefile: $(GMP)-$(GMP_VERSION)/configure $(FL_DEP_GMP)
	cd $(GMP)-$(GMP_VERSION)/ \
		&& $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) --enable-cxx
	touch $@
$(GMP)-$(GMP_VERSION)/$(GMP).la: $(GMP)-$(GMP_VERSION)/Makefile
	cd $(GMP)-$(GMP_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(GMP).la: $(GMP)-$(GMP_VERSION)/$(GMP).la
	cd $(GMP)-$(GMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	touch $@

$(GMP)-uninstall: $(GMP)-$(GMP_VERSION)/$(GMP).la
	cd $(GMP)-$(GMP_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(GMP)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(GMP).la
	touch $@

FL_SOURCES+=$(DN_SRC)/$(GMP_SRC)
FL_UNINSTALL+=$(GMP)-uninstall

########################################
# hashcat
HASHCAT=hashcat

FL_DEP_HASHCAT= \
	$(GMP)-install \
	$(NULL)

HASHCAT_VERSION=2.00
HASHCAT_SRC=$(HASHCAT)-$(HASHCAT_VERSION).tar.gz
HASHCAT_URL=https://github.com/hashcat/hashcat/archive/$(HASHCAT_VERSION).tar.gz

$(DN_SRC)/$(HASHCAT_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(HASHCAT_URL)
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/README.md: $(DN_SRC)/$(HASHCAT_SRC)
	tar -xf $(DN_SRC)/$(HASHCAT_SRC)
	rm -f $(HASHCAT)-install
	#mv $(HASHCAT)*$(HASHCAT_VERSION) $(HASHCAT)-$(HASHCAT_VERSION)
	#cd $(HASHCAT)-$(HASHCAT_VERSION)/
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/Makefile: $(HASHCAT)-$(HASHCAT_VERSION)/README.md $(FL_DEP_HASHCAT)
	touch $@

$(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin: $(HASHCAT)-$(HASHCAT_VERSION)/Makefile
	cd $(HASHCAT)-$(HASHCAT_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG) posix$(ARCHBITS)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat-cli$(ARCHBITS).bin: $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/hatcat/
	install -Dm755 $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin $(PREFIX_DEST)/$(PREFIX_CONF)/bin/
	install -Dm644 $(HASHCAT)-$(HASHCAT_VERSION)/docs/license.txt $(PREFIX_DEST)/$(PREFIX_CONF)/share/licenses/hashcat/license.txt
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/rules  $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/salts  $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/tables $(PREFIX_DEST)/$(PREFIX_CONF)/etc/hatcat/
	cp -a --no-preserve=ownership $(HASHCAT)-$(HASHCAT_VERSION)/examples $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/hatcat/
	touch $@

$(HASHCAT)-uninstall: $(HASHCAT)-$(HASHCAT_VERSION)/hashcat-cli$(ARCHBITS).bin
	cd $(HASHCAT)-$(HASHCAT_VERSION)/build && make uninstall
$(HASHCAT)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/hashcat-cli$(ARCHBITS).bin
	touch $@

FL_SOURCES+=$(DN_SRC)/$(HASHCAT_SRC)
FL_UNINSTALL+=$(HASHCAT)-uninstall

########################################
# https://aur.archlinux.org/packages/amdapp-sdk/
# https://aur.archlinux.org/packages/nvidia-gdk/
# Nvidia GPU Deployment Kit
# https://developer.nvidia.com/gpu-deployment-kit
NVIDIAGDK=nvidia-gdk

NVIDIAGDK_VERSION=352.55
NVIDIAGDK_SRC=gdk_linux_amd64_352_55_release.run
NVIDIAGDK_URL=http://developer.download.nvidia.com/compute/cuda/7.5/Prod/gdk/$(NVIDIAGDK_SRC)
# http://developer.download.nvidia.com/compute/cuda/6_0/rel/gdk/gdk_331_62_release.tgz

$(DN_SRC)/$(NVIDIAGDK_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(NVIDIAGDK_URL)
	touch $@

$(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl: $(DN_SRC)/$(NVIDIAGDK_SRC)
	sh $(DN_SRC)/$(NVIDIAGDK_SRC) --silent --installdir=$(PREFIX)
	touch $@

$(NVIDIAGDK)-uninstall: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl
	$(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl

$(NVIDIAGDK)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/uninstall_gdk.pl
	touch $@

FL_SOURCES+=$(DN_SRC)/$(NVIDIAGDK_SRC)
FL_UNINSTALL+=$(NVIDIAGDK)-uninstall

########################################
# oclhashcat
OCLHASHCAT=oclhashcat

FL_DEP_OCLHASHCAT= \
	$(CUDASDK)-install \
	$(NVIDIAGDK)-install \
	$(NULL)

OCLHASHCAT_VERSION=2.01
OCLHASHCAT_SRC=$(OCLHASHCAT)-$(OCLHASHCAT_VERSION).tar.gz
OCLHASHCAT_URL=https://github.com/hashcat/oclHashcat/archive/v$(OCLHASHCAT_VERSION).tar.gz

$(DN_SRC)/$(OCLHASHCAT_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(OCLHASHCAT_URL)
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/README.md: $(DN_SRC)/$(OCLHASHCAT_SRC)
	tar -xf $(DN_SRC)/$(OCLHASHCAT_SRC)
	rm -f $(OCLHASHCAT)-install
	#mv $(OCLHASHCAT)*$(OCLHASHCAT_VERSION) $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)
	#cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/
	sed -i 's|deps/cuda-7\.5|$(PREFIX)/opt/$(CUDASDK)|' $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/src/Makefile
	sed -i 's|deps/nvidia-gdk||'         $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/src/Makefile
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/Makefile: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/README.md $(FL_DEP_OCLHASHCAT)
	touch $@

$(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/oclHashcat$(ARCHBITS).bin: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/Makefile
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG) linux$(ARCHBITS) rules_optimize
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/oclhashcat: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/oclHashcat$(ARCHBITS).bin
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/charsets
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/kernels
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/masks
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/rules
	install -d $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/oclHashcat/extra
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/charsets/* $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/charsets/
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/kernels/*  $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/kernels/
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/masks/*    $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/masks/
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/rules/*    $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/rules/
	cp -a  $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/hashcat.hcstat $(PREFIX_DEST)/$(PREFIX_CONF)/share/oclHashcat/
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/docs/*     $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/oclHashcat/
	cp -ar $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/extra/*    $(PREFIX_DEST)/$(PREFIX_CONF)/share/doc/oclHashcat/extra/
	install -Dm755 $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/oclHashcat$(ARCHBITS).bin $(PREFIX_DEST)/$(PREFIX_CONF)/bin/oclhashcat
	touch $@

$(OCLHASHCAT)-uninstall: $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/oclHashcat$(ARCHBITS).bin
	cd $(OCLHASHCAT)-$(OCLHASHCAT_VERSION)/build && make uninstall
$(OCLHASHCAT)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/oclhashcat
	touch $@

FL_SOURCES+=$(DN_SRC)/$(OCLHASHCAT_SRC)
FL_UNINSTALL+=$(OCLHASHCAT)-uninstall

########################################

get-sources: $(DN_SRC)/created $(FL_SOURCES) $(FL_SOURCES_OTHERS)

aircrack: $(AIRCRACK)-install

hashcat: $(HASHCAT)-install

pyrit: $(PYRIT)-install

uninstall: $(FL_UNINSTALL)

clean:
	@rm -rf target $(FL_DEP_OTCL) $(FL_DEP_NS2)

distclean: clean
	@mkdir -p target/
	@touch i_should_be_removed
	@(echo "nullname" && ls) | grep -v run.sh | grep -v target | grep -v Makefile | grep -v distclean | grep -v sources | grep -v .patch | xargs sh -c 'mv "$$@" target'
	@rm -rf target
