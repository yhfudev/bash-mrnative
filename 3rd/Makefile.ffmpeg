# Auto-Build ffmpeg from source

# Prerequist:
# 1. basic compiler
#  1) RedHat/CentOS:
#     yum -y groupinstall "Development Tools"
#     yum -y install gcc-c++ rpm-build rpmdevtools bison flex gdb make cvs subversion git mercurial patch gawk # remove binutils-devel to avoid installing zlib-devel
#  2) Debian/Ubuntu
#     sudo apt-get install -y build-essential g++ bison flex gdb make cvs subversion subversion-tools git mercurial patch gawk

######################################################################
# define the directory stores all of the source code packages
DN_SRC=$(PWD)/../sources
DN_TOP=$(PWD)
DN_PATCH=$(PWD)/../sources
PREFIX=$(PWD)/target
STRLOGO=furnaceyhfudev
# USE_GPU=GPU_CUDA or GPU_OPENCL
USE_GPU=0
DEPENDS_GL=

######################################################################
all: get-sources ffmpeg gpac mediametrics

######################################################################
include Makefile.common
include Makefile.medialib

########################################
FREI0R=frei0r

FL_DEP_FREI0R= \
	$(AUTOMAKE)-install \
	$(GAVL)-install \
	$(OPENCV)-install \
	$(NULL)

USE_GIT_FREI0R=1

ifeq ($(USE_GIT_FREI0R),1) # use git instead
FREI0R_VERSION=git
FREI0R_SRC=$(FREI0R)-$(FREI0R_VERSION)/.git
FREI0R_URL=git://code.dyne.org/frei0r.git

$(DN_SRC)/$(FREI0R_SRC): $(DN_SRC)/created
	if [ ! -d "$(DN_SRC)/$(FREI0R_SRC)" ]; then \
        git clone $(FREI0R_URL) $(DN_SRC)/$(FREI0R)-$(FREI0R_VERSION); \
    fi
	cd $(DN_SRC)/$(FREI0R)-$(FREI0R_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

$(FREI0R)-$(FREI0R_VERSION)/README.md: $(DN_SRC)/$(FREI0R_SRC)
	cd $(DN_SRC)/$(FREI0R)-$(FREI0R_VERSION) && git pull #&& git submodule update --init --recursive
	if [ ! -d "$(FREI0R)-$(FREI0R_VERSION)" ]; then \
        cp -r $(DN_SRC)/$(FREI0R)-$(FREI0R_VERSION)/ $(FREI0R)-$(FREI0R_VERSION); \
    fi
	cd $(FREI0R)-$(FREI0R_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

else # use released files
FREI0R_VERSION=1.3
FREI0R_SRC=$(FREI0R)-$(FREI0R_VERSION).tar.gz
FREI0R_URL=http://www.piksel.no/frei0r/releases/frei0r-plugins-$(FREI0R_VERSION).tar.gz

$(DN_SRC)/$(FREI0R_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(FREI0R_URL)
	touch $@

$(FREI0R)-$(FREI0R_VERSION)/configure.ac: $(DN_SRC)/$(FREI0R_SRC)
	tar -xf $(DN_SRC)/$(FREI0R_SRC)
	touch $@
endif

#$(FREI0R)-$(FREI0R_VERSION)/mypatched: $(DN_PATCH)/pbs-FREI0R-newapi.patch $(FREI0R)-$(FREI0R_VERSION)/configure.ac
	#cd $(FREI0R)-$(FREI0R_VERSION)/ && patch -p1 < $(DN_PATCH)/pbs-FREI0R-newapi.patch
	#touch $@

$(FREI0R)-$(FREI0R_VERSION)/configure: $(FREI0R)-$(FREI0R_VERSION)/configure.ac $(FL_DEP_FREI0R)
	cd $(FREI0R)-$(FREI0R_VERSION)/ && $(ENV_COMPILE) autoreconf -if
	touch $@

$(FREI0R)-$(FREI0R_VERSION)/Makefile: $(FREI0R)-$(FREI0R_VERSION)/configure
	cd $(FREI0R)-$(FREI0R_VERSION)/ \
		&& $(ENV_COMPILE) OPENCV_CFLAGS= OPENCV_LIBS= ./configure --prefix=$(PREFIX_CONF)
	touch $@
$(FREI0R)-$(FREI0R_VERSION)/$(FREI0R).pc: $(FREI0R)-$(FREI0R_VERSION)/Makefile
	cd $(FREI0R)-$(FREI0R_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/pkgconfig/$(FREI0R).pc: $(FREI0R)-$(FREI0R_VERSION)/$(FREI0R).pc
	cd $(FREI0R)-$(FREI0R_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	touch $@

$(FREI0R)-uninstall: $(FREI0R)-$(FREI0R_VERSION)/$(FREI0R).pc
	cd $(FREI0R)-$(FREI0R_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(FREI0R)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/pkgconfig/$(FREI0R).pc
	touch $@

FL_SOURCES+=$(DN_SRC)/$(FREI0R_SRC)
FL_UNINSTALL+=$(FREI0R)-uninstall

########################################
MEDIAMETRICS=mediametrics

FL_DEP_MEDIAMETRICS= \
	$(AUTOMAKE)-install \
	$(OPENCV)-install \
	$(NULL)

USE_GIT_MEDIAMETRICS=1

ifeq ($(USE_GIT_MEDIAMETRICS),1) # use git instead
MEDIAMETRICS_VERSION=git
MEDIAMETRICS_SRC=$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/.git
MEDIAMETRICS_URL=https://github.com/yhfudev/mediametrics.git

$(DN_SRC)/$(MEDIAMETRICS_SRC): $(DN_SRC)/created
	if [ ! -d "$(DN_SRC)/$(MEDIAMETRICS_SRC)" ]; then \
        git clone $(MEDIAMETRICS_URL) $(DN_SRC)/$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION); \
    fi
	cd $(DN_SRC)/$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/configure.ac: $(DN_SRC)/$(MEDIAMETRICS_SRC)
	cd $(DN_SRC)/$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION) && git pull #&& git submodule update --init --recursive
	if [ ! -d "$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)" ]; then \
        cp -r $(DN_SRC)/$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION); \
    fi
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

else # use released files
MEDIAMETRICS_VERSION=0.2.0
MEDIAMETRICS_SRC=$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION).tar.gz
MEDIAMETRICS_URL=https://github.com/yhfudev/mediametrics/archive/$(MEDIAMETRICS_SRC)

$(DN_SRC)/$(MEDIAMETRICS_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(MEDIAMETRICS_URL)
	touch $@
$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/configure.ac: $(DN_SRC)/$(MEDIAMETRICS_SRC)
	tar -xf $(DN_SRC)/$(MEDIAMETRICS_SRC)
	touch $@
endif

$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/configure: $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/configure.ac $(FL_DEP_MEDIAMETRICS)
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ && $(ENV_COMPILE) ./autogen.sh
$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/Makefile: $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/configure
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) $(MEDIAMETRICS_GPU_SUPPORT_CONF)

$(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/mediametrics: $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/Makefile
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ && LD_LIBRARY_PATH=$(PREFIX_DEST)/$(PREFIX_CONF)/lib:$(PREFIX)/opt/$(CUDASDK)/lib64:$(LD_LIBRARY_PATH) $(ENV_COMPILE) make $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/mediametrics: $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/mediametrics
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ && $(ENV_COMPILE) make -j1 DESTDIR=$(PREFIX_DEST) install

$(MEDIAMETRICS)-uninstall: $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/mediametrics
	cd $(MEDIAMETRICS)-$(MEDIAMETRICS_VERSION)/ && $(ENV_COMPILE) make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(MEDIAMETRICS)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/mediametrics
	touch $@

FL_SOURCES+=$(DN_SRC)/$(MEDIAMETRICS_SRC)
FL_UNINSTALL+=$(MEDIAMETRICS)-uninstall

########################################
# A high-quality MPEG audio decoder
LIBMAD=libmad

FL_DEP_LIBMAD= \
	$(AUTOMAKE)-install \
	$(NULL)

LIBMAD_VERSION=0.15.1b
LIBMAD_SRC=$(LIBMAD)-$(LIBMAD_VERSION).tar.gz
LIBMAD_URL=http://downloads.sourceforge.net/sourceforge/mad/$(LIBMAD_SRC)

$(DN_SRC)/$(LIBMAD_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(LIBMAD_URL)
	touch $@

$(LIBMAD)-$(LIBMAD_VERSION)/configure.ac: $(DN_SRC)/$(LIBMAD_SRC)
	tar -xf $(DN_SRC)/$(LIBMAD_SRC)
	touch $@

$(LIBMAD)-$(LIBMAD_VERSION)/configure: $(LIBMAD)-$(LIBMAD_VERSION)/configure.ac $(FL_DEP_LIBMAD)
	cd $(LIBMAD)-$(LIBMAD_VERSION)/ && touch AUTHORS ChangeLog NEWS README config.h.in \
            && $(ENV_COMPILE) libtoolize --force --copy --install \
            && $(ENV_COMPILE) aclocal \
            && $(ENV_COMPILE) automake --copy --add-missing --gnu \
            && $(ENV_COMPILE) autoconf \
            #&& $(ENV_COMPILE) autoreconf -if
	touch $@

$(LIBMAD)-$(LIBMAD_VERSION)/Makefile: $(LIBMAD)-$(LIBMAD_VERSION)/configure
	cd $(LIBMAD)-$(LIBMAD_VERSION)/ && $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF)
	touch $@
$(LIBMAD)-$(LIBMAD_VERSION)/$(LIBMAD).la: $(LIBMAD)-$(LIBMAD_VERSION)/Makefile
	cd $(LIBMAD)-$(LIBMAD_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
	touch $@
$(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(LIBMAD).la: $(LIBMAD)-$(LIBMAD_VERSION)/$(LIBMAD).la
	cd $(LIBMAD)-$(LIBMAD_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install
	touch $@

$(LIBMAD)-uninstall: $(LIBMAD)-$(LIBMAD_VERSION)/$(LIBMAD).la
	cd $(LIBMAD)-$(LIBMAD_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(LIBMAD)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/lib/$(LIBMAD).la
	touch $@

FL_SOURCES+=$(DN_SRC)/$(LIBMAD_SRC)
FL_UNINSTALL+=$(LIBMAD)-uninstall

########################################
# GPAC is an Open Source multimedia framework for research and academic purposes
# https://gpac.wp.mines-telecom.fr/
GPAC=gpac

FL_DEP_GPAC= \
	$(CMAKE)-install \
	$(ZLIB)-install \
	$(LIBPNG)-install \
	$(FREETYPE)-install \
	$(THEORA)-install \
	$(VORBIS)-install \
	$(LIBOGG)-install \
	$(LIBMAD)-install \
	$(XVIDCORE)-install \
	$(FFMPEG)-install \
	$(NULL)

USE_GIT_GPAC=1
USE_SVN_GPAC=0

ifeq ($(USE_GIT_GPAC),1) # use git instead

GPAC_VERSION=git
GPAC_SRC=$(GPAC)-$(GPAC_VERSION)/.git
GPAC_URL=https://github.com/gpac/gpac.git

$(DN_SRC)/$(GPAC_SRC): $(DN_SRC)/created
	if [ ! -d "$(DN_SRC)/$(GPAC_SRC)" ]; then \
        git clone $(GPAC_URL) $(DN_SRC)/$(GPAC)-$(GPAC_VERSION); \
    fi
	cd $(DN_SRC)/$(GPAC)-$(GPAC_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

$(GPAC)-$(GPAC_VERSION)/README.md: $(DN_SRC)/$(GPAC_SRC)
	cd $(DN_SRC)/$(GPAC)-$(GPAC_VERSION) && git pull #&& git submodule update --init --recursive
	if [ ! -d "$(GPAC)-$(GPAC_VERSION)" ]; then \
        cp -r $(DN_SRC)/$(GPAC)-$(GPAC_VERSION)/ $(GPAC)-$(GPAC_VERSION); \
    fi
	cd $(GPAC)-$(GPAC_VERSION) && git pull #&& git submodule update --init --recursive
	touch $@

else ifeq ($(USE_SVN_GPAC),1) # use svn instead
GPAC_VERSION=svn
GPAC_SRC=$(GPAC)-$(GPAC_VERSION)/.svn
GPAC_URL=svn://svn.code.sf.net/p/gpac/code/trunk

#svn checkout http://svn.xvid.org/trunk --username anonymous
$(DN_SRC)/$(GPAC_SRC): $(DN_SRC)/created
	svn checkout --username anonymous $(GPAC_URL) $(DN_SRC)/$(GPAC)-$(GPAC_VERSION)
	touch $@
$(GPAC)-$(GPAC_VERSION)/README.md: $(DN_SRC)/$(GPAC_SRC)
#	cd $(DN_SRC)/$(GPAC)-$(GPAC_VERSION)/ && svn update
	rm -rf $(DN_TOP)/$(GPAC)*
	cp -r $(DN_SRC)/$(GPAC)-$(GPAC_VERSION)/gpac $(DN_TOP)/$(GPAC)-$(GPAC_VERSION)
#	@find $(DN_TOP)/$(GPAC)-$(GPAC_VERSION) -name ".svn" | while read A ; do rm -rf "$$A"; done
	#cd $(GPAC)-$(GPAC_VERSION)/ && $(ENV_COMPILE) ./autogen.sh #$(ENV_COMPILE) autoreconf -if
	touch $@

else # use released files

GPAC_VERSION=0.5.2
GPAC_SRC=$(GPAC)-$(GPAC_VERSION).tar.gz
GPAC_URL=https://github.com/gpac/gpac/archive/v$(GPAC_VERSION).tar.gz

$(DN_SRC)/$(GPAC_SRC): $(DN_SRC)/created
	$(WGET) -O $@ -c $(GPAC_URL)
	touch $@
$(GPAC)-$(GPAC_VERSION)/README.md: $(DN_SRC)/$(GPAC_SRC)
	tar -xf $(DN_SRC)/$(GPAC_SRC)
	rm -rf $(GPAC)-*
	mv $(GPAC)* $(GPAC)-$(GPAC_VERSION)
	touch $@
endif

$(GPAC)-$(GPAC_VERSION)/mypatched: $(DN_PATCH)/pbs-gpac-svn-1.patch $(GPAC)-$(GPAC_VERSION)/README.md $(FL_DEP_GPAC)
	if [ -d $(GPAC)-$(GPAC_VERSION)/.svn ]; then cd $(GPAC)-$(GPAC_VERSION)/ && svn revert -R . ; fi
	if [ -d $(GPAC)-$(GPAC_VERSION)/.hg ];  then cd $(GPAC)-$(GPAC_VERSION)/ && hg update -C . ; fi
	if [ -d $(GPAC)-$(GPAC_VERSION)/.git ]; then cd $(GPAC)-$(GPAC_VERSION)/ && git status | grep modified | awk '{print $$2}' | xargs git checkout ; fi
	#cd $(GPAC)-$(GPAC_VERSION)/ && patch -p1 < $(DN_PATCH)/pbs-gpac-svn-1.patch
	touch $@
#SpiderMonkey --use-js=no,local
# --disable-ttxt
# --use-jpeg=no,local
# --use-faad=no,local
# --use-mad=no,local
# --use-ffmpeg=no,local
# --use-openjpeg=no,system,local
# --use-a52=no,system,local
# -lfaac -lx264

$(GPAC)-$(GPAC_VERSION)/configure: $(GPAC)-$(GPAC_VERSION)/mypatched
	touch $@

$(GPAC)-$(GPAC_VERSION)/config.mak: $(GPAC)-$(GPAC_VERSION)/configure
	cd $(GPAC)-$(GPAC_VERSION)/ \
		&& $(ENV_COMPILE) ./configure --prefix=$(PREFIX_CONF) \
		--extra-cflags="-I$(PREFIX_DEST)/$(PREFIX_CONF)/include" \
		--extra-ldflags="-L$(PREFIX_DEST)/$(PREFIX_CONF)/lib -lxvidcore -ltheora -lvorbis -logg -lfreetype -lpng -lz" \
		--use-zlib=system \
		--use-png=local \
		--use-ft=local \
		--use-ogg=system --use-vorbis=system --use-theora=system \
		--use-ffmpeg=no --use-xvid=local \
		--static-modules --enable-static-bin --static-mp4box \
		--enable-player \
		$(NULL)
$(GPAC)-$(GPAC_VERSION)/bin/gcc/MP4Box: $(GPAC)-$(GPAC_VERSION)/config.mak
	cd $(GPAC)-$(GPAC_VERSION)/ && $(ENV_COMPILE) make $(MAKE_ARG)
$(PREFIX_DEST)/$(PREFIX_CONF)/bin/MP4Box: $(GPAC)-$(GPAC_VERSION)/bin/gcc/MP4Box
	cd $(GPAC)-$(GPAC_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) install

$(GPAC)-uninstall: $(GPAC)-$(GPAC_VERSION)/bin/gcc/MP4Box
	cd $(GPAC)-$(GPAC_VERSION)/ && make -j1 DESTDIR=$(PREFIX_DEST) uninstall
$(GPAC)-install: $(PREFIX_DEST)/$(PREFIX_CONF)/bin/MP4Box
	touch $@

FL_SOURCES+=$(DN_SRC)/$(GPAC_SRC)
FL_UNINSTALL+=$(GPAC)-uninstall

########################################

get-sources: $(DN_SRC)/created $(FL_SOURCES) $(FL_SOURCES_OTHERS)

ffmpeg: $(FFMPEG)-install

opencv: $(OPENCV)-install

mediametrics: $(MEDIAMETRICS)-install

gpac: $(GPAC)-install

uninstall: $(FL_UNINSTALL)

clean:
	@rm -rf target $(FL_DEPENDENCES_FFMPEG) $(FL_DEP_GPAC) $(FL_DEP_MEDIAMETRICS) $(FL_DEP_OPENCV)

distclean: clean
	@mkdir -p target/
	@touch i_should_be_removed
	@(echo "nullname" && ls) | grep -v run.sh | grep -v target | grep -v Makefile | grep -v distclean | grep -v sources | grep -v .patch | xargs sh -c 'mv "$$@" target'
	@rm -rf target
