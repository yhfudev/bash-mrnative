#!/bin/bash
#####################################################################
# bash library
# config file reader for bash scripts:
#   check_global_config
#   generate_default_config
#
# Copyright 2014 Yunhui Fu
# License: GPL v3.0 or later
#####################################################################
fn_exists() {
    type $1 | grep -q 'shell function'
}

fn_exists is_local
if [ ! "$?" = "0" ]; then
    mr_trace "Warning: You should include the definition of function is_local (in libfs.sh)"
fi

# check if the global variable not set, set it to default values.
check_global_config () {
    if [ "${HDFF_DN_OUTPUT}" = "" ]; then
        # set to ${DN_TOP}/data/output/
        HDFF_DN_OUTPUT=data/output
    fi

    FLG_AUTOCPU=0
    if [ "${HDFF_NUM_CLONE}" = "" ] ; then
        FLG_AUTOCPU=1
        HDFF_NUM_CLONE=1
    fi
    if [ "${HDFF_NUM_CLONE}" -lt 1 ] ; then
        FLG_AUTOCPU=1
    fi
    if [ "${FLG_AUTOCPU}" = "1" ] ; then
        HDFF_NUM_CLONE=1
        # number of CPUs
        NUM_PROC=$(cat /proc/cpuinfo | egrep ^processor | wc -l)
        if [ "${NUM_PROC}" -gt 1 ] ; then
        #HDFF_NUM_CLONE=$(( ${NUM_PROC} * 8 / 9 ))
        #NUM=$(( ${NUM_PROC} / 9 ))
        #if [ "${NUM}" -gt 8 ] ; then
        #  HDFF_NUM_CLONE=$(( ${NUM_PROC} - 8 ))
        #fi
        HDFF_NUM_CLONE=${NUM_PROC}
        fi
    fi
    if [ "${HDFF_NUM_CLONE}" -lt 1 ] ; then
        HDFF_NUM_CLONE=1
    fi

    local RET=0
    if [ ! "${HDFF_DN_SCRATCH}" = "" ]; then
        RET=$(is_local "${HDFF_DN_SCRATCH}")
        if [ ! "${RET}" = "l" ]; then
            # search if such device exist
            HDFF_DN_SCRATCH="/tmp/${USER}/"
            DN_SHM=$(df | grep shm | tail -n 1)
            if [ ! "$DN_SHM" = "" ]; then
                HDFF_DN_SCRATCH="${DN_SHM}/${USER}/"
            fi

            # the size
            SZK=$(df -P -T "${HDFF_DN_SCRATCH}" | awk '{print $5}')
            if (( $SZK < 1000000 )) ; then
                # 1000000: 1GB
                HDFF_DN_SCRATCH="/tmp/${USER}/"
            fi
        fi
        RET=$(is_local "${HDFF_DN_SCRATCH}")
        if [ ! "${RET}" = "l" ]; then
            mr_trace "Warning: the scratch dir is not in local disk: ${HDFF_DN_SCRATCH}"
        fi
    fi
}

#####################################################################
generate_default_config () {

  cat << EOF
# default configure file for HDFF generated by $(basename $0)

# the outfile directory
HDFF_DN_OUTPUT=results-mr

# how many running processes in each node
# 0 -- auto detect the CPU cores, use all of them
HDFF_NUM_CLONE=0

# total number of nodes (machines) in the system, default = 1
HDFF_TOTAL_NODES=1

# sim, clean, plot
#HDFF_FUNCTION="plot"

HDFF_FN_LOG="/dev/null"

# the temporary directory for NS2 simulator
HDFF_DN_SCRATCH="/dev/shm/$USER"
EOF
}
